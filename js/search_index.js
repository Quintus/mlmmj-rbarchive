var search_data = {"index":{"searchIndex":["mlmmjarchiver","archiver","<<()","add_ml()","archive!()","debug_mode=()","debug_mode?()","new()","preprocess_mlmmj_mails!()","search()","stop_watching_mlmmj_mails!()","watch_mlmmj_mails!()","changelog","copying","readme"],"longSearchIndex":["mlmmjarchiver","mlmmjarchiver::archiver","mlmmjarchiver::archiver#<<()","mlmmjarchiver::archiver#add_ml()","mlmmjarchiver::archiver#archive!()","mlmmjarchiver::archiver#debug_mode=()","mlmmjarchiver::archiver#debug_mode?()","mlmmjarchiver::archiver::new()","mlmmjarchiver::archiver#preprocess_mlmmj_mails!()","mlmmjarchiver::archiver#search()","mlmmjarchiver::archiver#stop_watching_mlmmj_mails!()","mlmmjarchiver::archiver#watch_mlmmj_mails!()","","",""],"info":[["MlmmjArchiver","","MlmmjArchiver.html","","<p>Namespace for this library.\n<p>This file is part of mlmmj-rbarchive.\n<p>mlmmj-rbarchive makes a web archive from …\n"],["MlmmjArchiver::Archiver","","MlmmjArchiver/Archiver.html","","<p>Archiver class. Point it to a target directory you want to place your web\narchive under, add some MLs …\n"],["<<","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-3C-3C","(path)","<p>Like #add_ml, but returns <code>self</code> for method chaining.\n"],["add_ml","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-add_ml","(path)","<p>Add a mlmmj ML directory to process.\n"],["archive!","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-archive-21","()","<p>Process all the mails in all the directories.\n"],["debug_mode=","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-debug_mode-3D","(val)","<p>Enable/disable debugging output.\n"],["debug_mode?","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-debug_mode-3F","()","<p>True if debugging output is enabled, see #debug_mode=.\n"],["new","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-c-new","(target, rc_args = {})","<p>Create a new Archiver that stores its HTML mails below the given\n<code>target</code> directory. <code>rc_args</code> allows the …\n"],["preprocess_mlmmj_mails!","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-preprocess_mlmmj_mails-21","()","<p>Iterates over all mailinglists and copies new messages into the\nintermediate month directory structure. …\n"],["search","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-search","(mlname, query)","<p>Search the given mailinglist for a specific search term. Return value is an\narray of paths relative to …\n"],["stop_watching_mlmmj_mails!","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-stop_watching_mlmmj_mails-21","()","<p>Terminate the watching thread started by #watch_mlmmj_mails.\n"],["watch_mlmmj_mails!","MlmmjArchiver::Archiver","MlmmjArchiver/Archiver.html#method-i-watch_mlmmj_mails-21","()","<p>The more elegant variant of #preprocess_mlmmj_mails. Instead of polling all\nmails and testing whether …\n"],["CHANGELOG","","CHANGELOG_rdoc.html","","<p>Changelog\n<p>Version 0.0.2\n<p>Made manpage findable for the gem-man gem.\n"],["COPYING","","COPYING.html","","\n<pre>                   GNU GENERAL PUBLIC LICENSE\n                      Version 3, 29 June 2007\n\nCopyright ...</pre>\n"],["README","","README_md.html","","<p>mlmmj-rbarchive\n<p>Small Ruby program for properly archiving a mlmmj-managed\nmailinglist.\n<p>Requirements\n"]]}}